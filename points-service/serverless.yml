service: points-service

frameworkVersion: '2'


provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: "Allow"
      Action: "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action: "sns:*"
      Resource: "*"
  environment:
    USERS_TABLE: ${self:provider.stage}-ecom-users-table


functions:
  checkUserPoints:
    handler: handlers/check_user_points.handler
    events:
      - http:
          path: /users/{user_id}/points
          method: get

  awardPoints:
    handler: handlers/award_points.handler
    events:
      - http:
          path: /users/{user_id}/points
          method: post

resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.USERS_TABLE}

plugins:
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  alertDispatchTopic: "${self:service}-alert-dispatch-${self:custom.stage}"
  accountId: ${opt:accountId, ''}